[ui]
	color = true
[color]
	ui = true
[push]
  default = current
[merge]
  tool = vimdiff
[alias]
  # Shorthands
  ci = commit
  br = branch
  co = checkout
  st = status

  # Lovely oneliners
  bra = branch -avv
  s = status -s .
  a = add -v .
  as = !git add . && git status -s
  l = !git --no-pager lg -n 10 && echo ""
  ch = commit -c HEAD
  pp = !git pull && git push
  ds = diff --staged

  # Relative diff with status (useful during resolving conflicts)
  d = diff --name-status --relative
  du = diff --name-only --relative --diff-filter=U

  # Remove all deleted files
  rmf = !git s --porcelain | grep -e '^\\s*D' --color=never | sed 's/ D //' | xargs git rm

  # Sugar
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen%cr%Creset %Cblue%cn%Creset' --abbrev-commit --date=relative

  # List branches in last commit date order
  latest = !git for-each-ref --sort=-committerdate --shell --format='echo -e \"\\e[0031m\" %(refname:short) \"\\e[00m\\e[0032m\" %(committerdate:relative) \"\\e[00m\\e[0034m\" %(committername) \"\\e[00m\"' refs/heads/ refs/remotes | bash

  # Delete all branches with "/" in it (it will leave branches like master and development)
  brclean = !git br | grep '.*/.*' | xargs git br -d


  # Create new branch (it changes whitespace to _ automatically)
  brnew = !"f() { echo $@ | sed -e 's/\\s/_/g' | sed  -e 's/://g' | xargs git co -b; }; f"


[user]
	name = "Pawe≈Ç Maciejewski"
	email = pawel.maciejewski@sony.com
[core]
	excludesfile = ~/.gitignore
    editor = vim 
